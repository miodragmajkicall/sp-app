"""fix cash_entries.id to be identity/autoincrement (convert to BIGINT first)

Revision ID: fix_cash_id_identity_20250820
Revises: aa68d85d25cb
Create Date: 2025-08-20 00:00:00
"""
from alembic import op

revision = "fix_cash_id_identity_20250820"
down_revision = "aa68d85d25cb"
branch_labels = None
depends_on = None


def upgrade():
    # 1) Ako 'id' nije integer tip, konvertuj ga u BIGINT
    # 2) Ako nije identity, dodaj GENERATED BY DEFAULT AS IDENTITY
    op.execute(
        """
DO $$
DECLARE 
    v_datatype text;
BEGIN
    SELECT data_type INTO v_datatype
    FROM information_schema.columns
    WHERE table_schema='public' AND table_name='cash_entries' AND column_name='id';

    IF v_datatype IS NULL THEN
        RAISE NOTICE 'cash_entries.id ne postoji; preskačem';
    ELSE
        -- Ako tip nije integer/smallint/bigint -> konverzija u BIGINT
        IF v_datatype NOT IN ('bigint','integer','smallint') THEN
            BEGIN
                ALTER TABLE public.cash_entries
                    ALTER COLUMN id DROP IDENTITY IF EXISTS;
            EXCEPTION WHEN undefined_object THEN
                -- ignore
            END;

            -- ako ima PK constraint-a, promjena tipa je OK; castamo vrijednosti (tabela je prazna, pa je bezbjedno)
            ALTER TABLE public.cash_entries
                ALTER COLUMN id TYPE BIGINT USING id::bigint;
        END IF;

        -- Ako još nije identity, dodaj identity
        IF NOT EXISTS (
            SELECT 1
            FROM information_schema.columns
            WHERE table_schema='public' AND table_name='cash_entries'
              AND column_name='id' AND identity_generation IS NOT NULL
        ) THEN
            ALTER TABLE public.cash_entries
                ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY;
        END IF;
    END IF;
END
$$;
        """
    )


def downgrade():
    # Skini IDENTITY i vrati tip u VARCHAR (nije nužno, ali radi simetrije)
    op.execute(
        """
DO $$
BEGIN
    BEGIN
        ALTER TABLE public.cash_entries
            ALTER COLUMN id DROP IDENTITY IF EXISTS;
    EXCEPTION WHEN undefined_object THEN
        -- ignore
    END;

    ALTER TABLE public.cash_entries
        ALTER COLUMN id TYPE VARCHAR USING id::text;
END
$$;
        """
    )
