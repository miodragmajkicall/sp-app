name: CI

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install test deps
        run: |
          python -m pip install --upgrade pip
          if [ -f backend/requirements-dev.txt ]; then
            pip install -r backend/requirements-dev.txt
          else
            pip install pytest httpx
          fi

      - name: Docker info
        run: |
          docker --version
          docker compose version

      - name: Build & start stack
        run: |
          docker compose up -d --build
          docker compose ps

      - name: Wait for API /health
        run: |
          echo "Waiting for http://localhost:8000/health ..."
          for i in $(seq 1 60); do
            if curl -fsS http://localhost:8000/health > /dev/null; then
              echo "API is up."
              exit 0
            fi
            sleep 2
          done
          echo "API did not become healthy in time." >&2
          docker compose logs api || true
          exit 1

      - name: Run tests
        run: |
          pytest -q backend/tests

      - name: Dump logs on failure
        if: failure()
        run: |
          mkdir -p logs
          docker compose logs > logs/compose-all.log || true
          docker compose logs api > logs/api.log || true
          docker compose logs db > logs/db.log || true

      - name: Upload logs artifact (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ci-logs
          path: logs

      - name: Teardown
        if: always()
        run: |
          docker compose down -v
