name: CI

on:
  push:
    branches: [ main, "feature/**" ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  backend:
    name: Backend CI
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip

      - name: Install host Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install -r backend/requirements-dev.txt

      - name: Start stack (Docker Compose)
        run: |
          docker compose up -d
          docker compose ps

      - name: Wait for API to be ready
        shell: bash
        run: |
          echo "Waiting for API on :8000 (health + db/health)..."
          for i in {1..60}; do
            if curl -fsS http://localhost:8000/health >/dev/null \
            && curl -fsS http://localhost:8000/db/health >/dev/null; then
              echo "âœ… API is up"
              exit 0
            fi
            sleep 2
          done
          echo "::error::API not ready in time"; docker compose logs api
          exit 1

      - name: Run migrations + seed
        run: |
          docker compose exec -T api alembic upgrade head
          docker compose exec -T api python -m app.seed

      - name: Run backend tests
        run: pytest -q backend/tests

      - name: Print logs on failure
        if: failure()
        run: docker compose logs --tail=200 api db || true

      - name: Shutdown stack
        if: always()
        run: docker compose down -v
